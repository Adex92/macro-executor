{
	"name": "macro-executor",
	"displayName": "Macro Executor Language",
	"description": "Fanuc Macro-Executor Programming Language",
	"version": "0.1.6",
	"author": "iSorp",
	"publisher": "iSorp",
	"license": "MIT",
	"categories": [
		"Programming Languages"
	],
	"homepage": "https://github.com/iSorp/macro-executor",
	"repository": {
		"type": "git",
		"url": "https://github.com/iSorp/macro-executor.git"
	},
	"bugs": {
		"url": "https://github.com/iSorp/macro-executor/issues"
	},
	"icon": "resources/icon.png",
	"engines": {
		"vscode": "^1.43.0"
	},
	"activationEvents": [
		"onLanguage:macro",
		"onCommand:macro.compile",
		"onCommand:macro.build",
		"onCommand:macro.clean",
		"onCommand:macro.setCompiler",
		"onCommand:macro.setExportPath"
	],
	"main": "./client/out/extension",
	"contributes": {
		"languages": [
			{
				"id": "macro",
				"aliases": [
					"Macro Executor",
					"Fanuc Macro Executor",
					"Fanuc CNC"
				],
				"extensions": [
					".src",
					".def",
					".lnk"
				],
				"configuration": "./syntaxes/macro.configuration.json"
			}
		],
		"grammars": [
			{
				"language": "macro",
				"scopeName": "source.macro",
				"path": "./syntaxes/macro.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "macro",
				"path": "./snippets/snippets.json"
			}
		],
		"commands": [
			{
				"command": "macro.compile",
				"title": "Compile File",
				"category": "Macro"
			},
			{
				"command": "macro.build",
				"title": "Compile and Link Project",
				"category": "Macro"
			},
			{
				"command": "macro.clean",
				"title": "Clean Project",
				"category": "Macro"
			},
			{
				"command": "macro.setCompiler",
				"title": "Select Macro Compiler",
				"category": "Macro"
			},
			{
				"command": "macro.setExportPath",
				"title": "Select Export Path",
				"category": "Macro"
			},
			{
				"command": "macro.setControlType",
				"title": "Select Control Type",
				"category": "Macro"
			}
		],
		"keybindings": [
			{
				"command": "macro.build",
				"key": "shift+ctrl+l",
				"when": "editorFocus"
			},
			{
				"command": "macro.compile",
				"key": "shift+ctrl+b",
				"when": "editorFocus"
			},
			{
				"command": "macro.clean",
				"key": "shift+ctrl+c",
				"when": "editorFocus"
			}
		],
		"configuration": {
			"type": "object",
			"title": "MacroExecutor Configuration",
			"properties": {
				"macro.codelens.enable": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Enable/disable codeLens for reference counter"
				},
				"macro.validate.enable": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Enable/disable Syntax validation"
				},
				"macro.validate.workspace": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Enable/disable Workspace validation"
				},
				"macro.build.compiler": {
					"type": "string",
					"scope": "window",
					"default": "MCOMPI",
					"description": "Macro Compiler Path",
					"$id": "1"
				},
				"macro.build.controlType": {
					"type": "string",
					"default": "0",
					"description": "MCOMPI Compiler Argument ",
					"$id": "2"
				},
				"macro.build.makeFile": {
					"type": "string",
					"default": "",
					"description": "Make file. Args = [export path, 'make / clean', compiler, cpmpiler arg]. If no Clean.bat is found, 'clean' is used as argument. If property is empty, internal build system is used",
					"$id": "3"
				},
				"macro.project.exportPath": {
					"type": "string",
					"default": "",
					"description": "Memoryfile Export Path",
					"$id": "4"
				},
				"macro.project.sourcePath": {
					"type": "string",
					"default": "",
					"description": "Source Path Contains All .src Files",
					"$id": "5"
				},
				"macro.project.buildPath": {
					"type": "string",
					"default": "",
					"description": "Build Files Path",
					"$id": "6"
				},
				"macro.project.linkPath": {
					"type": "string",
					"default": "",
					"description": "Link Path Contains All .lnk Files Inclusive Library",
					"$id": "7"
				}
			}
		},
		"problemMatchers": [
			{
				"name": "macro",
				"fileLocation": [
					"relative",
					"${fileDirname}"
				],
				"source": "macro",
				"pattern": {
					"regexp": "([0-9a-zA-Z\\._]+.LST).([0-9]+).(.*)",
					"file": 1,
					"line": 2,
					"message": 3
				}
			}
		]
	},
	"scripts": {
		"compile": "tsc -b",
		"compile:client": "tsc -b ./client/tsconfig.json",
		"compile:server": "tsc -b ./server/tsconfig.json",
		"watch": "tsc -b -w",
		"lint": "npm run lint:client && npm run lint:server",
		"lint:client": "eslint --config ./client/.eslintrc.json ./client/src/*.ts",
		"lint:server": "eslint --config ./server/.eslintrc.json ./server/src/*.ts",
		"clean": "rimraf client/out && rimraf server/out",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd .."
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.11.7",
		"@typescript-eslint/parser": "^2.3.0",
		"eslint": "^6.4.0",
		"mocha": "^7.0.1",
		"typescript": "^3.8.3"
	}
}
